apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.ice.name }}
  labels:
    app: {{ .Values.ice.name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.ice.name }}
      annotations:
        iam.amazonaws.com/role: arn:aws:iam::<12345678>:role/netflix-ice-kube
    spec:
      hostname: {{ .Values.hostname }}
      containers:
      - name: {{ .Values.ice.containerName }}
        args:
        - "-Djava.net.preferIPv4Stack=true"
        - "-Djava.net.preferIPv4Addresses"
        - "-Duser.timezone=America/New_York"
        - "-Dice.s3AccessKeyId="
        - "-Dice.s3SecretKey="
        - "run-app"
        image: {{ .Values.ice.repository }}:{{ .Values.ice.tag }}
        imagePullPolicy: {{ .Values.ice.pullPolicy }}
        env:
        - name: GRAILS_OPTS
          value: "-server -Xmx14G -Xms10G -Dfile.encoding=UTF-8"
        ports:
        - containerPort: {{ .Values.ice.internalPort }}
        volumeMounts:
          - name: iceproperty
            mountPath: /opt/ice/src/java/ice.properties
            subPath: ice.properties
        resources:
          limits:
            memory: {{ .Values.containers.resources.limits.memory }}
          requests:
            memory: {{ .Values.containers.requests.memory }}
      - name: {{ .Values.nginx.containerName }}
        image: "{{ .Values.nginx.repository }}:{{ .Values.nginx.tag }}"
        imagePullPolicy: {{ .Values.nginx.pullPolicy }}
        ports:
        - containerPort: {{ .Values.nginx.internalPort }}
        volumeMounts:
          - name: config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
      volumes:
        - name: iceproperty
          configMap:
            name: {{ .Values.ice.name }}-configmap
        - name: config
          configMap:
            name: {{ .Values.nginx.name }}-configmap
      restartPolicy: Always
